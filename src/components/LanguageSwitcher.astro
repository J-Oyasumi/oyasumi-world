---
interface Props {
  currentPath: string;
}

const { currentPath } = Astro.props;

// 检测当前语言
const isEnglish = currentPath.startsWith('/en/');
const currentLang = isEnglish ? 'en' : 'zh';

// 生成对应的语言路径
const getAlternatePath = (path: string) => {
  if (path.startsWith('/en/')) {
    // 英文路径转中文：移除 /en 前缀
    return path.replace('/en', '') || '/';
  } else {
    // 中文路径转英文：添加 /en 前缀
    return path === '/' ? '/en/' : `/en${path}`;
  }
};

const alternatePath = getAlternatePath(currentPath);
---

<div class="language-switcher">
  <a 
    href={alternatePath}
    class="lang-toggle"
    title={currentLang === 'zh' ? '切换到英文' : 'Switch to Chinese'}
  >
    <!-- 地球图标 -->
    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2"/>
      <path d="M2 12h20M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z" stroke="currentColor" stroke-width="2"/>
    </svg>
    <span class="lang-text">{currentLang === 'zh' ? 'EN' : '中'}</span>
  </a>
</div>

<style>
  .language-switcher {
    display: inline-flex;
    align-items: center;
  }

  .lang-toggle {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    padding: 0.25rem 0.375rem;
    background: var(--theme-bg-offset);
    border: 1px solid var(--theme-divider);
    border-radius: 4px;
    text-decoration: none;
    color: var(--theme-text);
    font-size: 0.75rem;
    font-weight: 500;
    transition: all 0.2s ease;
    cursor: pointer;
    height: 28px;
  }

  .lang-toggle:hover {
    background: var(--theme-bg-hover);
    border-color: var(--theme-accent);
    transform: translateY(-1px);
  }

  .lang-toggle:active {
    transform: translateY(0);
  }

  .lang-text {
    font-size: 0.7rem;
    font-weight: 600;
  }

  .lang-toggle svg {
    opacity: 0.7;
    width: 16px;
    height: 16px;
  }

  .lang-toggle:hover svg {
    opacity: 1;
  }
</style>
